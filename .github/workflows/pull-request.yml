name: Pull Request

on:
    pull_request:
        branches:
            - main
            - develop
            - beta
            - alpha
permissions:
    pull-requests: write
jobs:
    validate:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            - name: Cache yarn dependencies
              uses: actions/cache@v4
              id: yarn-cache
              with:
                  path: |
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                      node_modules
                      */*/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Run linter
              run: yarn lint

            - name: Run tests
              run: yarn test

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v5
              continue-on-error: true
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: welton-dev/stack-nestjs
                  fail_ci_if_error: false

            - name: Build
              run: yarn build

            - name: Validate commit messages
              uses: wagoid/commitlint-github-action@v5

    security:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/node@master
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              with:
                  args: --severity-threshold=high

    size:
        runs-on: ubuntu-latest
        env:
            CI_JOB_NUMBER: 1
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build
              run: yarn build

            - uses: andresz1/size-limit-action@v1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  build_script: build
                  skip_step: install
