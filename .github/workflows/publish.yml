name: Release

on:
    push:
        branches:
            - main
            - dev
    workflow_dispatch:

permissions:
    contents: write
    issues: write
    pull-requests: write

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write

        steps:
            - name: Generate token
              uses: actions/create-github-app-token@v1
              id: generate-token
              with:
                  app_id: ${{ secrets.MY_RELEASER_ID }}
                  private_key: ${{ secrets.MY_RELEASER_PRIVATE_KEY }}

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ steps.generate-token.outputs.token }}
                  fetch-depth: 0
                  ref: ${{ github.ref }}
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'yarn'
            - name: Get bot user ID
              id: bot-user-id
              run: |
                  echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
              env:
                  GH_TOKEN: ${{ steps.generate-token.outputs.token }}

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GIT_AUTHOR_EMAIL: '${{ steps.bot-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'
                  GIT_COMMITTER_EMAIL: '${{ steps.bot-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'
              run: npx semantic-release
