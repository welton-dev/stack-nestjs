name: Release

on:
    push:
        branches:
            - main
            - dev
    workflow_dispatch:

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write

        steps:
            - name: Generate token
              uses: actions/create-github-app-token@v1
              id: generate-token
              with:
                  app-id: ${{ secrets.MY_RELEASER_ID }}
                  private-key: ${{ secrets.MY_RELEASER_PRIVATE_KEY }}

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  token: ${{ steps.generate-token.outputs.token }}
                  fetch-depth: 0
                  ref: ${{ github.ref }}
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'yarn'
                  registry-url: 'https://registry.npmjs.org'

            - name: Configure Git
              run: |
                  git config --global user.email "1117016+github-actions[bot]@users.noreply.github.com"
                  git config --global user.name "github-actions[bot]"

            - name: Set npm credentials
              run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> $HOME/.npmrc

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build
              run: yarn build

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GIT_AUTHOR_NAME: 'github-actions[bot]'
                  GIT_AUTHOR_EMAIL: '1117016+github-actions[bot]@users.noreply.github.com'
                  GIT_COMMITTER_NAME: 'github-actions[bot]'
                  GIT_COMMITTER_EMAIL: '1117016+github-actions[bot]@users.noreply.github.com'
              run: npx semantic-release

            - name: Sync dev with main
              if: github.ref == 'refs/heads/main'
              env:
                  GH_TOKEN: ${{ steps.generate-token.outputs.token }}
              run: |
                  git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
                  git checkout dev
                  git pull origin dev
                  # Resolve conflicts in favor of main for version-related files
                  git merge -X theirs origin/main --no-edit -m "chore: sync dev with main [skip ci]"
                  # If there are conflicts, take main's version
                  if git status | grep "both modified:"; then
                      git checkout --theirs package.json CHANGELOG.md
                      git add package.json CHANGELOG.md
                      git commit --amend -m "chore: sync dev with main [skip ci]"
                  fi
                  git push origin dev
